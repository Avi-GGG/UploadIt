<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.css" rel="stylesheet" />
    <link
    href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css"
    rel="stylesheet"
    />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/file-icons-js/2.1.0/file-icons.css">
    <script src="https://code.iconify.design/2/2.0.0-rc.4/iconify.min.js"></script>
    <link href="/stylesheets/styles.css" rel="stylesheet">
</head>
<body class="min-h-screen relative bg-white  text-gray-200 font-sans">
    <!-- <video autoplay muted loop class="absolute top-0 left-0 w-full h-full object-cover z-0">
        <source src="../stylesheets/bg-image3.mp4" type="video/mp4">
        Your browser does not support the video tag.
    </video> -->
    <!-- Main Content (Visible by default) -->
    <div id="name" class="flex justify-between items-center bg-[#f7f7f8] h-20 relative  p-5">
        <h1 class="text-center font-bold text-3xl text-black">Hello <span  class="text-fuchsia-500 "><%= user.username%></span></h1>

        <div class="relative right-20 z-50">
            <button id="btn" onclick="showProfilePopUp()" class="outline outline-2 outline-gray-600 bg-red-600 w-14 h-14 rounded-[999px] overflow-hidden hover:scale-110"><img class="w-full h-full object-cover " src="/images/uploads/<%= user.profilepic || 'default.jpg' %>" alt=""></button>
            <div id="pfp" class="hidden absolute overflow-hidden profile-pop w-32 h-24 shadow-xl shadow-black rounded-lg text-center bg-white">
                <div onclick="window.location.href='/'" class="p-1 h-1/3 w-full bg-[#764248] font-bold text-white  hover:text-black">UploadIt</div>
                <div onclick="window.location.href='/profile'" class="p-1 font-semibold bg-[#E3C5BB] text-white hover:text-black w-full h-1/3 border-t-2 border-gray-950 cursor-pointer" >Profile</div>
                <div onclick="window.location.href='/users/logout'" class="p-1 w-full h-1/3 font-bold bg-red-700 hover:scale-110 text-white border-t-2 border-gray-950  cursor-pointer" >Logout</div>
            </div>
        </div>    
    </div>
    <main id="content" class="min-h-screen  flex flex-col items-center justify-center text-white mt-5">
        
        <form id="upload-form" class="w-[95%] z-20 bg-[#1c1c1c]" action="/upload-file" method="POST" enctype="multipart/form-data">
            
            
            <div class="flex items-center justify-center w-full ">
                <label for="file-input" class="flex flex-col items-center justify-center   w-full h-32 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-[#f7f7f8]    ">
                    <button id="upload-btn" type="button" class="flex flex-col items-center justify-center pt-5 pb-6">
                        <svg class="w-8 h-8 mb-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 16">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2"/>
                        </svg>
                        <p class="mb-2 text-sm text-black "><span class="font-semibold">Click to upload</span> or drag and drop</p>
                        <p class="text-xs text-black ">PPT, PNG, JPG or XLSX (upto 10MB)</p>
                    </button>
                    <input id="file-input" name="file" type="file" class="hidden" />
                </label>
            </div> 

        </form>
        
        <div id="overflow" class="mt-3  w-full  flex justify-center  z-20">
            <div class="mt-6 h-full  w-[95%] rounded-lg border border-white p-5 shadow-2xl shadow-gray-600 bg-[#E3CFBB] text-blue-600">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-2xl font-semibold  start-0">Uploaded files</h2>
                    <select id="filter-options" class="bg-transparent font-semibold border border-none text-blue-800 text-sm rounded-lg cursor-pointer focus:ring-0 block  p-2.5  ">
                        <option class="bg-[#E3CFBB]" value="oldest">Oldest</option>
                        <option class="bg-[#E3CFBB]" value="size">Filter by Size</option>
                        <option class="bg-[#E3CFBB]" value="recent">Recently Uploaded</option>
                    </select>
    
                </div>

                <% if (files.length > 0) { %>

                <ul id="all" class="space-y-4 w-full h-full text-black">
                    <% files.forEach(file => { %>
                    <li class="flex items-center justify-between space-x-4 w-full border border-black rounded text-blue-950 p-3 odd:bg-[#DDA3B2] even:bg-[#DFE2CF]" data-size="<%= file.fileSize %>" data-date="<%= new Date(file.uploadDate).toISOString() %>">
                        <div class="flex ">
                            <span class="iconify text-3xl mr-3" style="color: <%= file.iconColor %>;" data-icon="<%= file.iconClass %>" data-inline="false"></span>
                            <p class=" w-48"> <%= file.filename %></p>
                        </div>
                        <div class=" text-sm w-3/12 text-end">(<%= file.formattedSize %>)</div>
                        <div class=" w-full text-end"><%= new Date(file.uploadDate).toISOString().slice(0, 10) %></div>

                        <div class="flex mr-3">
                            <a href="<%= file.fileUrl %>" download class="text-blue-400 hover:text-blue-600 underline" 
                                onclick="console.log('<%= file.fileUrl %>')"><span class="iconify text-3xl text-emerald-500" data-icon="ci:download" data-inline="false"></span></a>
                                                            

                                <form action="/delete-file/<%= file._id %>" method="POST" class="inline-block ml-4">
                                    <button type="submit" class="text-red-500 hover:text-red-700 font-semibold"><span class="iconify text-3xl text-red-600" data-icon="tabler:trash-off" data-inline="false"></span></button>
                                </form>
                        </div>
                    </li>
                    <% }) %>
                </ul>
                <% } else { %>
                <p class="text-gray-400">No files uploaded yet.</p>
                <% } %>
            </div>
        </div>
        <footer class="mt-36  p-5 h-40 w-full text-center bg-[#f7f7f8] text-[#764248] z-40 flex items-center justify-center">
            &copy; 2024 <a href="https://example.com" class="text-blue-900 hover:text-blue-600">Your Company</a>. All rights reserved.
        </footer>
    </main>
    

    <!-- Preloader (Hidden by default) -->
    <div id="preloader" class="fixed inset-0 flex flex-col items-center justify-center bg-gray-800 z-50 hidden">
        <div class="relative w-72 h-1 bg-gray-600 mb-6">
            <div id="progress-bar" class="absolute left-0 top-0 h-full w-0 bg-gray-200"></div>
        </div>
        <div id="loading-text" class="relative overflow-hidden h-10 w-48">
            <p class="absolute inset-0 text-center uppercase text-sm tracking-wide font-medium">Loading</p>
            <p class="absolute inset-0 translate-y-full text-center uppercase text-sm tracking-wide font-medium">
                Complete
            </p>
        </div>
        <p id="percentage" class="absolute bottom-10 right-10 text-9xl font-extrabold opacity-10">0</p>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
    <script src="https://code.iconify.design/2/2.0.0-rc.4/iconify.min.js"></script>
    <script>
        function showProfilePopUp() {
            document.querySelector('.profile-pop').classList.remove('hidden');
            
        }

        document.addEventListener('click', function(event) {
            const profilePopUp = document.querySelector('#pfp');
            const profileButton = document.querySelector('#btn');

            if (!profilePopUp.contains(event.target) && !profileButton.contains(event.target)) {
                profilePopUp.classList.add('hidden');
            }
        });

        // Function to show the preloader and start the loading animation
// Function to show the preloader and start the loading animation
function startLoading() {
    // Hide main content
    document.getElementById("content").classList.add("hidden");

    // Show the preloader
    document.getElementById("preloader").classList.remove("hidden");

    // GSAP animation for progress bar and loading text
    const progressBar = document.getElementById("progress-bar");
    const percentage = document.getElementById("percentage");

    gsap.to(progressBar, {
        width: "100%",
        duration: 10, // Set to match your actual upload duration
        ease: "power1.inOut",
        onUpdate: function () {
            const progress = Math.round(this.progress() * 100);
            percentage.textContent = progress;
        },
        onComplete: function () {
            uploadFile(); // Start file upload right after progress animation completes
        
        }
    });

    
}

// Function to handle file upload using XMLHttpRequest (with progress)
function uploadFile() {
    const formData = new FormData(document.getElementById("upload-form"));
    const xhr = new XMLHttpRequest();

    // Open the request and set the endpoint
    xhr.open("POST", "/upload-file", true);

    // Track progress of file upload
    xhr.upload.addEventListener("progress", function (e) {
        if (e.lengthComputable) {
            // Calculate the percentage of upload progress
            const progress = Math.round((e.loaded / e.total) * 100);
            updateProgress(progress);  // Update progress bar and percentage
        }
    });

    // Handle the request completion (success or failure)
    xhr.onload = function () {
        if (xhr.status === 200) {
            const data = JSON.parse(xhr.responseText);
            if (data.success) {
                showSuccessMessage("File uploaded successfully!");
                gsap.to("#preloader", {
                    y: "100vh",
                    delay: 0.5,
                    duration: 1,
                    ease: "power2.inOut",
                    onComplete: function () {
                        window.location.href = data.redirectUrl; // Redirect after upload
                    }
                });
            } else {
                showSuccessMessage("Upload failed. Please try again.", true);
                alert("Upload failed: " + data.message);
                document.getElementById("content").classList.remove("hidden");
            }
        } else {
            console.log("Error uploading file:", xhr.statusText);
            alert("An error occurred during file upload.");
            document.getElementById("content").classList.remove("hidden");
        }
    };

    // Handle any network errors
    xhr.onerror = function () {
        console.log("Network error during file upload");
        alert("A network error occurred.");
        document.getElementById("content").classList.remove("hidden");
    };

    // Send the form data
    xhr.send(formData);
}

// Function to update the progress bar and percentage text
function updateProgress(progress) {
    // Update the progress bar width
    gsap.to("#progress-bar", {
        width: `${progress}%`,
        duration: 0.5,
        ease: "power1.inOut",
    });

    // Update the percentage text
    document.getElementById("percentage").textContent = progress;
}

// Attach a click event to the upload button
document.getElementById("upload-btn").addEventListener("click", function () {
    const fileInput = document.getElementById("file-input");
    fileInput.click(); // Trigger the file input dialog
    
    fileInput.onchange = () => {
        if (fileInput.files.length > 0) {
            startLoading(); // Show preloader and start the loading animation
        }
    };
});

function showSuccessMessage(message, isError = false) {
    // Create the message overlay
    const overlay = document.createElement("div");
    overlay.id = "success-message";
    overlay.className = `fixed inset-0 flex items-center justify-center z-50 ${
        isError ? "bg-red-800" : "bg-gray-800"
    }`;

    overlay.innerHTML = `
        <div class="text-center p-6 rounded-lg  ${
            isError ? "text-red-600" : "text-gray-600"
        }">
            <h2 class="text-6xl font-bold ">${message}</h2>
        </div>
    `;

    document.body.appendChild(overlay);

    // Automatically hide the message after 3 seconds
    setTimeout(() => {
        overlay.remove();
        location.reload(); // Refresh the page
    }, 3000);
}

document.getElementById('filter-options').addEventListener('change', function() {
    const filterValue = this.value;
    applyFilter(filterValue);
});

function applyFilter(filterValue) {
    switch (filterValue) {
        case 'size':
            sortFilesBySize();
            break;
        case 'oldest':
            sortFilesByOldest();
            break;
        case 'recent':
            sortFilesByRecent();
            break;
        default:
            break;
    }
}
function sortFilesBySize() {
    const filesList = document.getElementById('all').children;
    const filesArray = Array.from(filesList);

    filesArray.sort((a, b) => {
        const sizeA = parseInt(a.getAttribute('data-size'));  // Add data-size attribute to each file item
        const sizeB = parseInt(b.getAttribute('data-size'));
        return sizeB - sizeA;  // Sort ascending
    });

    // Reorder the list based on size
    filesArray.forEach(file => document.getElementById('all').appendChild(file));
}
function sortFilesByOldest() {
    const filesList = document.getElementById('all').children;
    const filesArray = Array.from(filesList);

    filesArray.sort((a, b) => {
        const dateA = new Date(a.getAttribute('data-date'));  // Add data-date attribute to each file item
        const dateB = new Date(b.getAttribute('data-date'));
        return dateA - dateB;  // Sort in ascending order
    });

    // Reorder the list based on the oldest
    filesArray.forEach(file => document.getElementById('all').appendChild(file));
}
function sortFilesByRecent() {
    const filesList = document.getElementById('all').children;
    const filesArray = Array.from(filesList);

    filesArray.sort((a, b) => {
        const dateA = new Date(a.getAttribute('data-date'));  // Add data-date attribute to each file item
        const dateB = new Date(b.getAttribute('data-date'));
        return dateB - dateA;  // Sort in descending order (most recent first)
    });

    // Reorder the list based on the most recent
    filesArray.forEach(file => document.getElementById('all').appendChild(file));
}

// Select the drop area and file input
const dropArea = document.querySelector('#file-input').closest('label');
const fileInput = document.getElementById('file-input');

// Prevent default behavior for drag-and-drop events
['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
    dropArea.addEventListener(eventName, e => e.preventDefault());
});

// Highlight drop area on dragover
dropArea.addEventListener('dragover', () => {
    dropArea.classList.add('hover:bg-gray-800');
});

// Remove highlight when drag leaves or file is dropped
dropArea.addEventListener('dragleave', () => {
    dropArea.classList.remove('bg-gray-800');
});
dropArea.addEventListener('drop', () => {
    dropArea.classList.remove('bg-gray-800');
});

// Handle dropped files
dropArea.addEventListener('drop', e => {
    const files = e.dataTransfer.files;
    if (files.length) {
        fileInput.files = files; // Assign files to file input
        startLoading(); // Trigger upload process
    }
});

    </script>
</body>
</html>